Index: app/src/main/java/edu/northeastern/finalprojectgroup11/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.northeastern.finalprojectgroup11;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    private SharedPreferences sharedPreferences;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseDatabase firebaseDatabase;\r\n    private DatabaseReference userStatusRef;\r\n    private Button btnLogin;\r\n    private String currentUID;\r\n    private DatabaseReference roomRef;\r\n    private final int maxRoomCount = 2;\r\n    private ValueEventListener player2Join;\r\n\r\n    private AlertDialog roomDialog;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        Button btnTest = findViewById(R.id.test_btn);\r\n        btnTest.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, dragDropDemo.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n\r\n        sharedPreferences = getSharedPreferences(\"Battleship\", MODE_PRIVATE);\r\n        currentUID = sharedPreferences.getString(\"UID\", null);\r\n\r\n        // Initialize Firebase Auth and Database\r\n        mAuth = FirebaseAuth.getInstance();\r\n        firebaseDatabase = FirebaseDatabase.getInstance();\r\n\r\n        // Check if user is logged in and update UI accordingly\r\n        FirebaseUser currentUser = mAuth.getCurrentUser();\r\n        if (currentUID != null) {\r\n            setUserOnlineStatus(currentUID, true);\r\n            DatabaseReference usernameRef = firebaseDatabase.getReference(\"users\")\r\n                    .child(currentUID)\r\n                    .child(\"username\");\r\n            usernameRef.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                    // Get the username as a String\r\n                    String username = dataSnapshot.getValue(String.class);\r\n                    if (username != null) {\r\n                        // Set the button text to the username\r\n                        btnLogin.setText(username);\r\n                    } else {\r\n                        // Handle the case where username is not available\r\n                        btnLogin.setText(\"User\");\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError error) {\r\n                    // Handle potential errors here\r\n                    Log.w(\"TAG\", \"Failed to read username.\");\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        btnLogin = findViewById(R.id.login_btn);\r\n        btnLogin.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (currentUID != null) {\r\n                    showSignOutDialog();\r\n                } else {\r\n                    showLoginDialog();\r\n                }\r\n            }\r\n        });\r\n\r\n        Button btnCreateRoom = findViewById(R.id.createRoom_btn);\r\n        btnCreateRoom.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                createRoom();\r\n            }\r\n        });\r\n\r\n        Button btnJoinRoom = findViewById(R.id.joinRoom_btn);\r\n        btnJoinRoom.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showJoinRoomDialog();\r\n            }\r\n        });\r\n    }\r\n\r\n    //show the login dialog when press login button\r\n    private void showLoginDialog() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        LayoutInflater inflater = getLayoutInflater();\r\n        View loginView = inflater.inflate(R.layout.dialog_signin, null);\r\n        builder.setView(loginView)\r\n                .setPositiveButton(\"Sign in\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        // sign in though firebase\r\n                        EditText usernameEditText = loginView.findViewById(R.id.username);\r\n                        String username = usernameEditText.getText().toString().trim();\r\n                        if (!username.isEmpty()) {\r\n                            checkIfUsernameExists(username);\r\n                        } else {\r\n                            Toast.makeText(MainActivity.this, \"Please enter a username\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                })\r\n                .setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.cancel();\r\n                    }\r\n                });\r\n\r\n        AlertDialog dialog = builder.create();\r\n        dialog.show();\r\n    }\r\n\r\n    private void checkIfUsernameExists(String username) {\r\n        DatabaseReference usersRef = firebaseDatabase.getReference(\"users\");\r\n        usersRef.orderByChild(\"username\").equalTo(username).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    // Username exists, log in the user\r\n                    for (DataSnapshot userSnapshot : dataSnapshot.getChildren()) {\r\n                        currentUID = userSnapshot.getKey();\r\n                        setUserOnlineStatus(currentUID, true);\r\n                        sharedPreferences.edit().putString(\"UID\", currentUID).apply();\r\n                        btnLogin.setText(username);\r\n                    }\r\n                } else {\r\n                    // Username does not exist, create a new user\r\n                    signInAnonymously(username);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.w(TAG, \"checkIfUsernameExists:onCancelled\", databaseError.toException());\r\n            }\r\n        });\r\n    }\r\n\r\n    private void signInAnonymously(String username) {\r\n        mAuth.signInAnonymously()\r\n                .addOnCompleteListener(this, task -> {\r\n                    if (task.isSuccessful()) {\r\n                        FirebaseUser user = mAuth.getCurrentUser();\r\n                        if (user != null) {\r\n                            currentUID = user.getUid();\r\n                            setUserOnlineStatus(user.getUid(), true);\r\n                            storeUserData(user.getUid(), username);\r\n                            btnLogin.setText(username);\r\n                            sharedPreferences.edit().putString(\"UID\", currentUID).apply();\r\n                        }\r\n                    } else {\r\n                        Log.w(TAG, \"signInAnonymously:failure\", task.getException());\r\n                        Toast.makeText(MainActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void storeUserData(String uid, String username) {\r\n        DatabaseReference userRef = firebaseDatabase.getReference(\"users\").child(uid);\r\n        userRef.child(\"username\").setValue(username)\r\n                .addOnCompleteListener(task -> {\r\n                    if (task.isSuccessful()) {\r\n                        Log.d(TAG, \"User data stored successfully\");\r\n                    } else {\r\n                        Log.w(TAG, \"Failed to store user data\", task.getException());\r\n                    }\r\n                });\r\n        userRef.child(\"status\").setValue(\"online\");\r\n    }\r\n\r\n    private void setUserOnlineStatus(String userId, boolean isOnline) {\r\n        userStatusRef = firebaseDatabase.getReference(\"users\").child(userId).child(\"status\");\r\n        if (isOnline) {\r\n            userStatusRef.setValue(\"online\");\r\n            userStatusRef.onDisconnect().setValue(\"offline\");\r\n        } else {\r\n            userStatusRef.setValue(\"offline\");\r\n            Log.d(TAG, \"User status set to offline for UID: \" + userId);\r\n        }\r\n    }\r\n\r\n    private void showSignOutDialog() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setTitle(\"Sign Out\")\r\n                .setMessage(\"Are you sure you want to sign out?\")\r\n                .setPositiveButton(\"Sign out\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        Log.d(TAG, \"Sign out dialog confirmed\");\r\n                        signOut();\r\n                    }\r\n                })\r\n                .setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss(); // Dismiss the dialog\r\n                    }\r\n                });\r\n\r\n        AlertDialog dialog = builder.create();\r\n        dialog.show();\r\n    }\r\n\r\n    private void signOut() {\r\n        FirebaseUser user = mAuth.getCurrentUser();\r\n        if (currentUID != null) {\r\n            if (user != null) {\r\n                mAuth.signOut();\r\n            }\r\n            setUserOnlineStatus(currentUID, false);\r\n            currentUID = null;\r\n            sharedPreferences.edit().remove(\"UID\").apply();\r\n            Log.d(TAG, \"User signed out successfully\");\r\n            btnLogin.setText(\"Login\");\r\n        } else {\r\n            Log.d(TAG, \"No user to sign out\");\r\n        }\r\n        Log.d(TAG, \"currentUID after sign out: \" + currentUID);\r\n        Log.d(TAG, \"SharedPreferences UID after sign out: \" + sharedPreferences.getString(\"UID\", \"null\"));\r\n    }\r\n\r\n\r\n\r\n    //create room stuff\r\n    //\r\n    private void createRoom() {\r\n        String roomCode = generateRoomCode();  // Method to generate a random room code\r\n        // check if the newly created room code exist;\r\n        firebaseDatabase.getReference(\"rooms\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                // If the server is full\r\n                if (snapshot.getChildrenCount() == maxRoomCount) {\r\n                    Toast.makeText(getApplicationContext(), \"Game server is full, try later\", Toast.LENGTH_LONG).show();\r\n                }\r\n\r\n                // if the room code is unique\r\n                if (!snapshot.hasChild(roomCode)) {\r\n                    // do the create room and show dialog stuff\r\n                    roomRef = firebaseDatabase.getReference(\"rooms\").child(roomCode);\r\n                    roomRef.child(\"player1\").setValue(currentUID);  // Save the current user's UID as player1\r\n                    roomRef.child(\"gameState\").setValue(\"waiting\"); // Set room state as waiting\r\n\r\n                    // Show the room code to the user to share with a friend\r\n                    showRoomCode(roomCode);\r\n\r\n                    // listener to detect player 2 join\r\n                    player2Join = new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                            if (snapshot.exists()) {\r\n                                // Check if player2 has joined\r\n                                String player2UID = snapshot.child(\"player2\").getValue(String.class);\r\n                                if (player2UID != null && !player2UID.isEmpty()) {\r\n                                    Toast.makeText(getApplicationContext(), \"Player 2 joined, game should start\", Toast.LENGTH_SHORT).show();\r\n                                    if (roomDialog.isShowing() || roomDialog != null) {\r\n                                        roomDialog.dismiss();\r\n                                        roomDialog = null;\r\n                                    }\r\n                                    startGame(roomCode);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError error) {\r\n                            Log.w(TAG, \"listenForPlayer2Join:onCancelled\", error.toException());\r\n                        }\r\n                    };\r\n                    roomRef.addValueEventListener(player2Join);\r\n                } else {\r\n                    // else keep create other number\r\n                    createRoom();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    private String generateRoomCode() {\r\n        return String.valueOf((int) (Math.random() * maxRoomCount));  // Generate a random  number as room code\r\n    }\r\n\r\n    private void showRoomCode(String roomCode) {\r\n        // Display room code in a dialog or on the screen\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setTitle(\"Room Created\")\r\n                .setMessage(\"Share this code with your friend: \" + roomCode)\r\n                .setPositiveButton(\"Quit\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        destroyRoom();\r\n                        dialog.cancel();\r\n                    }\r\n                });\r\n        roomDialog = builder.create();\r\n        roomDialog.show();\r\n\r\n    }\r\n\r\n    // Destroy room when player1 quit from create room\r\n    private void destroyRoom() {\r\n        if (player2Join != null){\r\n            roomRef.removeEventListener(player2Join);\r\n        }\r\n\r\n        if (roomRef != null) {\r\n            roomRef.removeValue();\r\n            roomRef = null;\r\n        }\r\n    }\r\n\r\n    //join room\r\n    private void showJoinRoomDialog() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        LayoutInflater inflater = getLayoutInflater();\r\n        View dialogView = inflater.inflate(R.layout.dialog_joinroom, null);\r\n        builder.setView(dialogView)\r\n                .setTitle(\"Join Room\")\r\n                .setPositiveButton(\"Join\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        EditText editTextRoomCode = dialogView.findViewById(R.id.editTextRoomCode);\r\n                        String roomCode = editTextRoomCode.getText().toString().trim();\r\n                        if (!roomCode.isEmpty()) {\r\n                            joinRoom(roomCode);\r\n                        } else {\r\n                            Toast.makeText(MainActivity.this, \"Please enter a room code\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                })\r\n                .setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n\r\n        AlertDialog dialog = builder.create();\r\n        dialog.show();\r\n    }\r\n\r\n    private void joinRoom(String roomCode) {\r\n        // use a listener to check if roomcode exist or not\r\n        firebaseDatabase.getReference(\"rooms\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                // only join room if room exist\r\n                if (snapshot.hasChild(roomCode)) {\r\n                    roomRef = firebaseDatabase.getReference(\"rooms\").child(roomCode);\r\n                    roomRef.child(\"player2\").setValue(currentUID);  // Save the current user's UID as player2\r\n\r\n                    // Check if both players are present to start the game\r\n                    roomRef.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(DataSnapshot dataSnapshot) {\r\n                            if (dataSnapshot.child(\"player1\").exists() && dataSnapshot.child(\"player2\").exists() && dataSnapshot.child(\"gameState\").getValue().equals(\"waiting\") ) {\r\n\r\n                                Toast.makeText(getApplicationContext(), \"join success, should start game\", Toast.LENGTH_SHORT).show();\r\n                                startGame(roomCode);\r\n                            } else {\r\n                                Toast.makeText(getApplicationContext(), \"Room is full\", Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                            Log.w(TAG, \"joinRoom:onCancelled\", databaseError.toException());\r\n                        }\r\n                    });\r\n                } else {\r\n                    //else shoe room not found\r\n                    Toast.makeText(getApplicationContext(), \"Room not found\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    private void startGame(String roomCode) {\r\n        roomRef.child(\"gameState\").setValue(\"active\"); // Set room state as active\r\n\r\n        // Remove listener for player 2 join\r\n        if (player2Join != null){\r\n            roomRef.removeEventListener(player2Join);\r\n        }\r\n\r\n        // start deploy activity\r\n        Intent intent = new Intent(MainActivity.this, DeployActivity.class);\r\n        intent.putExtra(\"roomCode\",roomCode); // Pass the room code into new activity\r\n        startActivity(intent);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/edu/northeastern/finalprojectgroup11/MainActivity.java b/app/src/main/java/edu/northeastern/finalprojectgroup11/MainActivity.java
--- a/app/src/main/java/edu/northeastern/finalprojectgroup11/MainActivity.java	(revision 4413f4c060985ee97a1c9d010103179e15977475)
+++ b/app/src/main/java/edu/northeastern/finalprojectgroup11/MainActivity.java	(date 1722931398244)
@@ -275,11 +275,12 @@
     //create room stuff
     //
     private void createRoom() {
-        String roomCode = generateRoomCode();  // Method to generate a random room code
+//        String roomCode = generateRoomCode();  // Method to generate a random room code
         // check if the newly created room code exist;
         firebaseDatabase.getReference("rooms").addListenerForSingleValueEvent(new ValueEventListener() {
             @Override
             public void onDataChange(@NonNull DataSnapshot snapshot) {
+                String roomCode = generateRoomCode();  // Method to generate a random room code
                 // If the server is full
                 if (snapshot.getChildrenCount() == maxRoomCount) {
                     Toast.makeText(getApplicationContext(), "Game server is full, try later", Toast.LENGTH_LONG).show();
@@ -321,7 +322,8 @@
                     roomRef.addValueEventListener(player2Join);
                 } else {
                     // else keep create other number
-                    createRoom();
+//                    createRoom();
+                    Toast.makeText(MainActivity.this, "Room code generated collides with existing room.", Toast.LENGTH_SHORT).show();
                 }
             }
 
@@ -406,6 +408,7 @@
                 // only join room if room exist
                 if (snapshot.hasChild(roomCode)) {
                     roomRef = firebaseDatabase.getReference("rooms").child(roomCode);
+
                     roomRef.child("player2").setValue(currentUID);  // Save the current user's UID as player2
 
                     // Check if both players are present to start the game
